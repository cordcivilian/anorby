/*! tailwindcss v4.0.14 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: "Lucida Console", monospace;
    --font-serif: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --spacing: 0.25rem;
    --container-sm: 24rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --font-weight-bold: 700;
    --font-weight-black: 900;
    --radius-lg: 0.5rem;
    --radius-4xl: 2rem;
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(
      --font-sans--font-variation-settings
    );
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(
      --font-mono--font-feature-settings
    );
    --default-mono-font-variation-settings: var(
      --font-mono--font-variation-settings
    );
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var( --default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var( --default-font-variation-settings, normal );
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var( --default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace );
    font-feature-settings: var( --default-mono-font-feature-settings, normal );
    font-variation-settings: var( --default-mono-font-variation-settings, normal );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklab, currentColor 50%, transparent);
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .ds-modal {
    pointer-events: none;
    visibility: hidden;
    position: fixed;
    inset: calc(0.25rem * 0);
    margin: calc(0.25rem * 0);
    display: grid;
    height: 100%;
    max-height: none;
    width: 100%;
    max-width: none;
    align-items: center;
    justify-items: center;
    background-color: transparent;
    padding: calc(0.25rem * 0);
    color: inherit;
    overflow-x: hidden;
    transition: transform 0.3s ease-out, visibility 0.3s allow-discrete, background-color 0.3s ease-out, opacity 0.1s ease-out;
    overflow-y: hidden;
    overscroll-behavior: contain;
    z-index: 999;
    &::backdrop {
      display: none;
    }
    &.ds-modal-open, &[open], &:target {
      background-color: oklch(0% 0 0/ 0.4);
      transition: transform 0.3s ease-out, background-color 0.3s ease-out, opacity 0.1s ease-out;
      pointer-events: auto;
      visibility: visible;
      opacity: 100%;
      .ds-modal-box {
        translate: 0 0;
        scale: 1;
        opacity: 1;
      }
    }
    @starting-style {
      &.ds-modal-open, &[open], &:target {
        visibility: hidden;
        opacity: 0%;
      }
    }
  }
  .ds-tooltip {
    position: relative;
    display: inline-block;
    --ds-tt-bg: var(--color-neutral);
    --ds-tt-off: calc(100% + 0.5rem);
    --ds-tt-tail: calc(100% + 1px + 0.25rem);
     > :where(.ds-tooltip-content), &[data-tip]:before {
      position: absolute;
      max-width: 20rem;
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 2);
      padding-block: calc(0.25rem * 1);
      text-align: center;
      white-space: normal;
      color: var(--color-neutral-content);
      opacity: 0%;
      font-size: 0.875rem;
      line-height: 1.25em;
      transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
      background-color: var(--ds-tt-bg);
      width: max-content;
      pointer-events: none;
      z-index: 1;
      --tw-content: attr(data-tip);
      content: var(--tw-content);
    }
    &:after {
      position: absolute;
      position: absolute;
      opacity: 0%;
      background-color: var(--ds-tt-bg);
      transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
      content: "";
      pointer-events: none;
      width: 0.625rem;
      height: 0.25rem;
      display: block;
      mask-repeat: no-repeat;
      mask-position: -1px 0;
      --ds-mask-tooltip: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
      mask-image: var(--ds-mask-tooltip);
    }
    &.ds-tooltip-open, &[data-tip]:hover, &:hover, &:has(:focus-visible) {
       > .ds-tooltip-content, &[data-tip]:before, &:after {
        opacity: 100%;
        --ds-tt-pos: 0rem;
        transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0s, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0ms;
      }
    }
     > .ds-tooltip-content, &[data-tip]:before {
      transform: translateX(-50%) translateY(var(--ds-tt-pos, 0.25rem));
      inset: auto auto var(--ds-tt-off) 50%;
    }
    &:after {
      transform: translateX(-50%) translateY(var(--ds-tt-pos, 0.25rem));
      inset: auto auto var(--ds-tt-tail) 50%;
    }
  }
  .ds-tab {
    position: relative;
    display: inline-flex;
    cursor: pointer;
    appearance: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    text-align: center;
    webkit-user-select: none;
    user-select: none;
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content);
      }
    }
    --ds-tab-p: 1rem;
    --ds-tab-bg: var(--color-base-100);
    --ds-tab-border-color: var(--color-base-300);
    --ds-tab-radius-ss: 0;
    --ds-tab-radius-se: 0;
    --ds-tab-radius-es: 0;
    --ds-tab-radius-ee: 0;
    --ds-tab-order: 0;
    --ds-tab-radius-min: calc(0.75rem - var(--border));
    border-color: #0000;
    order: var(--ds-tab-order);
    height: calc(var(--size-field, 0.25rem) * 10);
    font-size: 0.875rem;
    padding-inline-start: var(--ds-tab-p);
    padding-inline-end: var(--ds-tab-p);
    &:is(input[type="radio"]) {
      min-width: fit-content;
      &:after {
        content: attr(aria-label);
      }
    }
    &:is(label) {
      position: relative;
      input {
        position: absolute;
        inset: calc(0.25rem * 0);
        cursor: pointer;
        appearance: none;
        opacity: 0%;
      }
    }
    &:checked, &:is(label:has(:checked)), &:is(.ds-tab-active, [aria-selected="true"]) {
      & + .ds-tab-content {
        display: block;
        height: 100%;
      }
    }
    &:not(:checked, label:has(:checked), :hover, .ds-tab-active, [aria-selected="true"]) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
    &:not(input):empty {
      flex-grow: 1;
      cursor: default;
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:focus-visible, &:is(label:has(:checked:focus-visible)) {
      outline: 2px solid currentColor;
      outline-offset: -5px;
    }
    &[disabled] {
      pointer-events: none;
      opacity: 40%;
    }
  }
  .ds-menu {
    display: flex;
    width: fit-content;
    flex-direction: column;
    flex-wrap: wrap;
    padding: calc(0.25rem * 2);
    --ds-menu-active-fg: var(--color-neutral-content);
    --ds-menu-active-bg: var(--color-neutral);
    font-size: 0.875rem;
    :where(li ul) {
      position: relative;
      margin-inline-start: calc(0.25rem * 4);
      padding-inline-start: calc(0.25rem * 2);
      white-space: nowrap;
      &:before {
        position: absolute;
        inset-inline-start: calc(0.25rem * 0);
        top: calc(0.25rem * 3);
        bottom: calc(0.25rem * 3);
        background-color: var(--color-base-content);
        opacity: 10%;
        width: var(--border);
        content: "";
      }
    }
    :where(li > .ds-menu-dropdown:not(.ds-menu-dropdown-show)) {
      display: none;
    }
    :where(li:not(.ds-menu-title) > *:not(ul, details, .ds-menu-title, .ds-btn)), :where(li:not(.ds-menu-title) > details > summary:not(.ds-menu-title)) {
      display: grid;
      grid-auto-flow: column;
      align-content: flex-start;
      align-items: center;
      gap: calc(0.25rem * 2);
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 3);
      padding-block: calc(0.25rem * 1.5);
      text-align: start;
      transition-property: color, background-color, box-shadow;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
      grid-auto-columns: minmax(auto, max-content) auto max-content;
      text-wrap: balance;
      user-select: none;
    }
    :where(li > details > summary) {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      &::-webkit-details-marker {
        display: none;
      }
    }
    :where(li > details > summary), :where(li > .ds-menu-dropdown-toggle) {
      &:after {
        justify-self: flex-end;
        display: block;
        height: 0.375rem;
        width: 0.375rem;
        rotate: -135deg;
        translate: 0 -1px;
        transition-property: rotate, translate;
        transition-duration: 0.2s;
        content: "";
        transform-origin: 50% 50%;
        box-shadow: 2px 2px inset;
        pointer-events: none;
      }
    }
    :where(li > details[open] > summary):after, :where(li > .ds-menu-dropdown-toggle.ds-menu-dropdown-show):after {
      rotate: 45deg;
      translate: 0 1px;
    }
    :where( li:not(.ds-menu-title, .ds-disabled) > *:not(ul, details, .ds-menu-title), li:not(.ds-menu-title, .ds-disabled) > details > summary:not(.ds-menu-title) ):not(.ds-menu-active, :active, .ds-btn) {
      &.ds-menu-focus, &:focus-visible {
        cursor: pointer;
        background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        color: var(--color-base-content);
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
    :where( li:not(.ds-menu-title, .ds-disabled) > *:not(ul, details, .ds-menu-title):not(.ds-menu-active, :active, .ds-btn):hover, li:not(.ds-menu-title, .ds-disabled) > details > summary:not(.ds-menu-title):not(.ds-menu-active, :active, .ds-btn):hover ) {
      cursor: pointer;
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;
    }
    :where(li:empty) {
      background-color: var(--color-base-content);
      opacity: 10%;
      margin: 0.5rem 1rem;
      height: 1px;
    }
    :where(li) {
      position: relative;
      display: flex;
      flex-shrink: 0;
      flex-direction: column;
      flex-wrap: wrap;
      align-items: stretch;
      .ds-badge {
        justify-self: flex-end;
      }
      & > *:not(ul, .ds-menu-title, details, .ds-btn):active, & > *:not(ul, .ds-menu-title, details, .ds-btn).ds-menu-active, & > details > summary:active {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
        color: var(--ds-menu-active-fg);
        background-color: var(--ds-menu-active-bg);
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--ds-fx-noise);
        &:not(&:active) {
          box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--ds-menu-active-bg);
        }
      }
      &.ds-menu-disabled {
        pointer-events: none;
        color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
      }
    }
    .ds-dropdown:focus-within {
      .ds-menu-dropdown-toggle:after {
        rotate: 45deg;
        translate: 0 1px;
      }
    }
    .ds-dropdown-content {
      margin-top: calc(0.25rem * 2);
      padding: calc(0.25rem * 2);
      &:before {
        display: none;
      }
    }
  }
  .ds-collapse-arrow {
     > .ds-collapse-title:after {
      position: absolute;
      display: block;
      height: 0.5rem;
      width: 0.5rem;
      transform: translateY(-100%) rotate(45deg);
      transition-property: all;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      transition-duration: 0.2s;
      top: 1.9rem;
      inset-inline-end: 1.4rem;
      content: "";
      transform-origin: 75% 75%;
      box-shadow: 2px 2px;
      pointer-events: none;
    }
  }
  .ds-collapse-plus {
     > .ds-collapse-title:after {
      position: absolute;
      display: block;
      height: 0.5rem;
      width: 0.5rem;
      transition-property: all;
      transition-duration: 300ms;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      top: 0.9rem;
      inset-inline-end: 1.4rem;
      content: "+";
      pointer-events: none;
    }
  }
  .ds-dropdown {
    position: relative;
    display: inline-block;
    position-area: var(--ds-anchor-v, bottom) var(--ds-anchor-h, span-right);
    & > *:not(summary):focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    .ds-dropdown-content {
      position: absolute;
    }
    &:not(details, .ds-dropdown-open, .ds-dropdown-hover:hover, :focus-within) {
      .ds-dropdown-content {
        display: none;
        transform-origin: top;
        opacity: 0%;
        scale: 95%;
      }
    }
    &[popover], .ds-dropdown-content {
      z-index: 999;
      animation: dropdown 0.2s;
      transition-property: opacity, scale, display;
      transition-behavior: allow-discrete;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    }
    @starting-style {
      &[popover], .ds-dropdown-content {
        scale: 95%;
        opacity: 0;
      }
    }
    &.ds-dropdown-open, &:not(.ds-dropdown-hover):focus, &:focus-within {
       > [tabindex]:first-child {
        pointer-events: none;
      }
      .ds-dropdown-content {
        opacity: 100%;
      }
    }
    &.ds-dropdown-hover:hover {
      .ds-dropdown-content {
        opacity: 100%;
        scale: 100%;
      }
    }
    &:is(details) {
      summary {
        &::-webkit-details-marker {
          display: none;
        }
      }
    }
    &.ds-dropdown-open, &:focus, &:focus-within {
      .ds-dropdown-content {
        scale: 100%;
      }
    }
    &:where([popover]) {
      background: #0000;
    }
    &[popover] {
      position: fixed;
      color: inherit;
      @supports not (position-area: bottom) {
        margin: auto;
        &.ds-dropdown-open:not(:popover-open) {
          display: none;
          transform-origin: top;
          opacity: 0%;
          scale: 95%;
        }
        &::backdrop {
          background-color: color-mix(in oklab, #000 30%, #0000);
        }
      }
      &:not(.ds-dropdown-open, :popover-open) {
        display: none;
        transform-origin: top;
        opacity: 0%;
        scale: 95%;
      }
    }
  }
  .ds-btn {
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 1.5);
    text-align: center;
    vertical-align: middle;
    outline-offset: 2px;
    webkit-user-select: none;
    user-select: none;
    padding-inline: var(--ds-btn-p);
    color: var(--ds-btn-fg);
    --tw-prose-links: var(--ds-btn-fg);
    height: var(--ds-size);
    font-size: var(--ds-fontsize, 0.875rem);
    font-weight: 600;
    outline-color: var(--ds-btn-color, var(--color-base-content));
    transition-property: color, background-color, border-color, box-shadow;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 0.2s;
    border-start-start-radius: var(--ds-join-ss, var(--radius-field));
    border-start-end-radius: var(--ds-join-se, var(--radius-field));
    border-end-start-radius: var(--ds-join-es, var(--radius-field));
    border-end-end-radius: var(--ds-join-ee, var(--radius-field));
    background-color: var(--ds-btn-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--ds-btn-noise);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--ds-btn-border);
    text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
    box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--ds-btn-shadow);
    --ds-size: calc(var(--size-field, 0.25rem) * 10);
    --ds-btn-bg: var(--ds-btn-color, var(--color-base-200));
    --ds-btn-fg: var(--color-base-content);
    --ds-btn-p: 1rem;
    --ds-btn-border: color-mix(in oklab, var(--ds-btn-bg), #000 calc(var(--depth) * 5%));
    --ds-btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--ds-btn-bg) calc(var(--depth) * 30%), #0000),
    0 4px 3px -2px color-mix(in oklab, var(--ds-btn-bg) calc(var(--depth) * 30%), #0000);
    --ds-btn-noise: var(--ds-fx-noise);
    .ds-prose & {
      text-decoration-line: none;
    }
    @media (hover: hover) {
      &:hover {
        --ds-btn-bg: color-mix(in oklab, var(--ds-btn-color, var(--color-base-200)), #000 7%);
      }
    }
    &.ds-btn-active {
      --ds-btn-bg: color-mix(in oklab, var(--ds-btn-color, var(--color-base-200)), #000 7%);
      --ds-btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
      isolation: isolate;
    }
    &:focus-visible {
      outline-width: 2px;
      outline-style: solid;
    }
    &:active:not(.ds-btn-active) {
      translate: 0 0.5px;
      --ds-btn-bg: color-mix(in oklab, var(--ds-btn-color, var(--color-base-200)), #000 5%);
      --ds-btn-border: color-mix(in oklab, var(--ds-btn-color, var(--color-base-200)), #000 7%);
      --ds-btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
    }
    &:is(:disabled, [disabled], .ds-btn-disabled) {
      &:not(.ds-btn-link, .ds-btn-ghost) {
        background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        box-shadow: none;
      }
      pointer-events: none;
      --ds-btn-border: #0000;
      --ds-btn-noise: none;
      --ds-btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
      @media (hover: hover) {
        &:hover {
          pointer-events: none;
          background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
          --ds-btn-border: #0000;
          --ds-btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
        }
      }
    }
    &:is(input[type="checkbox"], input[type="radio"]) {
      appearance: none;
      &::after {
        content: attr(aria-label);
      }
    }
    &:where(input:checked:not(.ds-filter .ds-btn)) {
      --ds-btn-color: var(--color-primary);
      --ds-btn-fg: var(--color-primary-content);
      isolation: isolate;
    }
  }
  .ds-collapse {
    &:not(td, tr, colgroup) {
      visibility: visible;
    }
    position: relative;
    display: grid;
    overflow: hidden;
    border-radius: var(--radius-box, 1rem);
    width: 100%;
    grid-template-rows: max-content 0fr;
    transition: grid-template-rows 0.2s;
     > input:is([type="checkbox"], [type="radio"]) {
      grid-column-start: 1;
      grid-row-start: 1;
      appearance: none;
      opacity: 0;
      z-index: 1;
      width: 100%;
      padding: 1rem;
      padding-inline-end: 3rem;
      min-height: 3.75rem;
      transition: background-color 0.2s ease-out;
    }
    &:is([open], :focus:not(.ds-collapse-close)),
  &:not(.ds-collapse-close):has(> input:is([type="checkbox"], [type="radio"]):checked) {
      grid-template-rows: max-content 1fr;
    }
    &:is([open], :focus:not(.ds-collapse-close)) > .ds-collapse-content,
  &:not(.ds-collapse-close)
    > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .ds-collapse-content) {
      visibility: visible;
      min-height: fit-content;
    }
    &:focus-visible,
  &:has(> input:is([type="checkbox"], [type="radio"]):focus-visible) {
      outline-color: var(--color-base-content);
      outline-style: solid;
      outline-width: 2px;
      outline-offset: 2px;
    }
    &:not(.ds-collapse-close) {
       > input[type="checkbox"], > input[type="radio"]:not(:checked), > .ds-collapse-title {
        cursor: pointer;
      }
    }
    &:focus:not(.ds-collapse-close, .ds-collapse[open]) > .ds-collapse-title {
      cursor: unset;
    }
    &:is([open], :focus:not(.ds-collapse-close)) > :where(.ds-collapse-content),
  &:not(.ds-collapse-close)
    > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .ds-collapse-content) {
      padding-bottom: 1rem;
      transition: padding 0.2s ease-out,
      background-color 0.2s ease-out;
    }
    &:is([open]) {
      &.ds-collapse-arrow {
         > .ds-collapse-title:after {
          transform: translateY(-50%) rotate(225deg);
        }
      }
    }
    &.ds-collapse-open {
      &.ds-collapse-arrow {
         > .ds-collapse-title:after {
          transform: translateY(-50%) rotate(225deg);
        }
      }
      &.ds-collapse-plus {
         > .ds-collapse-title:after {
          content: "−";
        }
      }
    }
    &.ds-collapse-arrow:focus:not(.ds-collapse-close) {
       > .ds-collapse-title:after {
        transform: translateY(-50%) rotate(225deg);
      }
    }
    &.ds-collapse-arrow:not(.ds-collapse-close) {
       > input:is([type="checkbox"], [type="radio"]):checked ~ .ds-collapse-title:after {
        transform: translateY(-50%) rotate(225deg);
      }
    }
    &[open] {
      &.ds-collapse-plus {
         > .ds-collapse-title:after {
          content: "−";
        }
      }
    }
    &.ds-collapse-plus:focus:not(.ds-collapse-close) {
       > .ds-collapse-title:after {
        content: "−";
      }
    }
    &.ds-collapse-plus:not(.ds-collapse-close) {
       > input:is([type="checkbox"], [type="radio"]):checked ~ .ds-collapse-title:after {
        content: "−";
      }
    }
    &:is(details) {
      width: 100%;
      & summary {
        position: relative;
        display: block;
        &::-webkit-details-marker {
          display: none;
        }
      }
    }
    &:is(details) summary {
      outline: none;
    }
  }
  .ds-collapse-content {
    grid-column-start: 1;
    grid-row-start: 1;
    visibility: hidden;
    grid-column-start: 1;
    grid-row-start: 2;
    min-height: 0;
    transition: visibility 0.2s;
    transition: padding 0.2s ease-out,
    background-color 0.2s ease-out;
    padding-left: 1rem;
    padding-right: 1rem;
    cursor: unset;
  }
  .ds-collapse-open {
    grid-template-rows: max-content 1fr;
     > .ds-collapse-content {
      visibility: visible;
      min-height: fit-content;
      padding-bottom: 1rem;
      transition: padding 0.2sease-out,
      background-color 0.2sease-out;
    }
  }
  .visible {
    visibility: visible;
  }
  .ds-tabs-lift {
    --ds-tabs-height: auto;
    --ds-tabs-direction: row;
     > .ds-tab {
      --ds-tab-border: 0 0 var(--border) 0;
      --ds-tab-radius-ss: min(var(--radius-field), var(--ds-tab-radius-min));
      --ds-tab-radius-se: min(var(--radius-field), var(--ds-tab-radius-min));
      --ds-tab-radius-es: 0;
      --ds-tab-radius-ee: 0;
      --ds-tab-paddings: var(--border) var(--ds-tab-p) 0 var(--ds-tab-p);
      --ds-tab-border-colors: #0000 #0000 var(--ds-tab-border-color) #0000;
      --ds-tab-corner-width: calc(100% + min(var(--radius-field), var(--ds-tab-radius-min)) * 2);
      --ds-tab-corner-height: min(var(--radius-field), var(--ds-tab-radius-min));
      --ds-tab-corner-position: top left, top right;
      border-width: var(--ds-tab-border);
      border-start-start-radius: var(--ds-tab-radius-ss);
      border-start-end-radius: var(--ds-tab-radius-se);
      border-end-start-radius: var(--ds-tab-radius-es);
      border-end-end-radius: var(--ds-tab-radius-ee);
      padding: var(--ds-tab-paddings);
      border-color: var(--ds-tab-border-colors);
      &:is(.ds-tab-active, [aria-selected="true"]):not(.ds-tab-disabled, [disabled]), &:is(input:checked, label:has(:checked)) {
        --ds-tab-border: var(--border) var(--border) 0 var(--border);
        --ds-tab-border-colors: var(--ds-tab-border-color) var(--ds-tab-border-color) #0000
        var(--ds-tab-border-color);
        --ds-tab-paddings: 0 calc(var(--ds-tab-p) - var(--border)) var(--border)
        calc(var(--ds-tab-p) - var(--border));
        --ds-tab-inset: auto auto 0 auto;
        --ds-tab-grad: calc(69% - var(--border));
        --radius-start: radial-gradient(
        circle at top left,
        #0000 var(--ds-tab-grad),
        var(--ds-tab-border-color) calc(var(--ds-tab-grad) + 0.25px),
        var(--ds-tab-border-color) calc(var(--ds-tab-grad) + var(--border)),
        var(--ds-tab-bg) calc(var(--ds-tab-grad) + var(--border) + 0.25px)
      );
        --radius-end: radial-gradient(
        circle at top right,
        #0000 var(--ds-tab-grad),
        var(--ds-tab-border-color) calc(var(--ds-tab-grad) + 0.25px),
        var(--ds-tab-border-color) calc(var(--ds-tab-grad) + var(--border)),
        var(--ds-tab-bg) calc(var(--ds-tab-grad) + var(--border) + 0.25px)
      );
        background-color: var(--ds-tab-bg);
        &:before {
          z-index: 1;
          content: "";
          display: block;
          position: absolute;
          width: var(--ds-tab-corner-width);
          height: var(--ds-tab-corner-height);
          background-position: var(--ds-tab-corner-position);
          background-image: var(--radius-start), var(--radius-end);
          background-size: min(var(--radius-field), var(--ds-tab-radius-min)) min(var(--radius-field), var(--ds-tab-radius-min));
          background-repeat: no-repeat;
          inset: var(--ds-tab-inset);
        }
        &:first-child:before {
          --radius-start: none;
        }
        [dir="rtl"] &:first-child:before {
          transform: rotateY(180deg);
        }
        &:last-child:before {
          --radius-end: none;
        }
        [dir="rtl"] &:last-child:before {
          transform: rotateY(180deg);
        }
      }
    }
    &:has(.ds-tab-content) {
       > .ds-tab:first-child {
        &:not(.ds-tab-active, [aria-selected="true"]) {
          --ds-tab-border-colors: var(--ds-tab-border-color) var(--ds-tab-border-color) #0000
          var(--ds-tab-border-color);
        }
      }
    }
    .ds-tab-content {
      --ds-tabcontent-margin: calc(-1 * var(--border)) 0 0 0;
      --ds-tabcontent-radius-ss: 0;
      --ds-tabcontent-radius-se: var(--radius-box);
      --ds-tabcontent-radius-es: var(--radius-box);
      --ds-tabcontent-radius-ee: var(--radius-box);
    }
    :checked, label:has(:checked), :is(.ds-tab-active, [aria-selected="true"]) {
      & + .ds-tab-content {
        &:nth-child(1), &:nth-child(n + 3) {
          --ds-tabcontent-radius-ss: var(--radius-box);
        }
      }
    }
  }
  .ds-toast {
    position: fixed;
    inset-inline-start: auto;
    inset-inline-end: calc(0.25rem * 0);
    top: auto;
    bottom: calc(0.25rem * 0);
    margin: calc(0.25rem * 4);
    display: flex;
    min-width: fit-content;
    flex-direction: column;
    gap: calc(0.25rem * 2);
    background-color: transparent;
    white-space: nowrap;
    translate: var(--ds-toast-x, 0) var(--ds-toast-y, 0);
    & > * {
      animation: toast 0.25s ease-out;
    }
    &:where(.ds-toast-start) {
      inset-inline-start: calc(0.25rem * 0);
      inset-inline-end: auto;
      --ds-toast-x: 0;
    }
    &:where(.ds-toast-center) {
      inset-inline-start: calc(1/2 * 100%);
      inset-inline-end: calc(1/2 * 100%);
      --ds-toast-x: -50%;
    }
    &:where(.ds-toast-end) {
      inset-inline-start: auto;
      inset-inline-end: calc(0.25rem * 0);
      --ds-toast-x: 0;
    }
    &:where(.ds-toast-bottom) {
      top: auto;
      bottom: calc(0.25rem * 0);
      --ds-toast-y: 0;
    }
    &:where(.ds-toast-middle) {
      top: calc(1/2 * 100%);
      bottom: auto;
      --ds-toast-y: -50%;
    }
    &:where(.ds-toast-top) {
      top: calc(0.25rem * 0);
      bottom: auto;
      --ds-toast-y: 0;
    }
  }
  .ds-indicator {
    position: relative;
    display: inline-flex;
    width: max-content;
    :where(.ds-indicator-item) {
      z-index: 1;
      position: absolute;
      white-space: nowrap;
      top: var(--ds-inidicator-t, 0);
      bottom: var(--ds-inidicator-b, auto);
      left: var(--ds-inidicator-s, auto);
      right: var(--ds-inidicator-e, 0);
      translate: var(--ds-inidicator-x, 50%) var(--ds-indicator-y, -50%);
    }
  }
  .ds-chat-bubble {
    position: relative;
    display: block;
    width: fit-content;
    border-radius: var(--radius-field);
    background-color: var(--color-base-300);
    padding-inline: calc(0.25rem * 4);
    padding-block: calc(0.25rem * 2);
    color: var(--color-base-content);
    grid-row-end: 3;
    min-height: 2rem;
    min-width: 2.5rem;
    max-width: 90%;
    &:before {
      position: absolute;
      bottom: calc(0.25rem * 0);
      height: calc(0.25rem * 3);
      width: calc(0.25rem * 3);
      background-color: inherit;
      content: "";
      mask-repeat: no-repeat;
      mask-image: var(--ds-mask-chat);
      mask-position: 0px -1px;
      mask-size: 13px;
    }
  }
  .ds-card {
    position: relative;
    display: flex;
    flex-direction: column;
    border-radius: var(--radius-box);
    outline-width: 2px;
    transition: outline 0.2s ease-in-out;
    outline: 0 solid #0000;
    outline-offset: 2px;
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:focus-visible {
      outline-color: currentColor;
    }
    :where(figure:first-child) {
      overflow: hidden;
      border-start-start-radius: inherit;
      border-start-end-radius: inherit;
      border-end-start-radius: unset;
      border-end-end-radius: unset;
    }
    :where(figure:last-child) {
      overflow: hidden;
      border-start-start-radius: unset;
      border-start-end-radius: unset;
      border-end-start-radius: inherit;
      border-end-end-radius: inherit;
    }
    &:where(.ds-card-border) {
      border: var(--border) solid var(--color-base-200);
    }
    &:where(.ds-card-dash) {
      border: var(--border) dashed var(--color-base-200);
    }
    &.ds-image-full {
      display: grid;
      &:before {
        position: relative;
        grid-column-start: 1;
        grid-row-start: 1;
        border-radius: var(--radius-box);
        background-color: var(--color-neutral);
        opacity: 75%;
        content: "";
      }
       > * {
        grid-column-start: 1;
        grid-row-start: 1;
      }
       > .ds-card-body {
        position: relative;
        color: var(--color-neutral-content);
      }
      :where(figure) {
        overflow: hidden;
        border-radius: inherit;
      }
       > figure img {
        height: 100%;
        object-fit: cover;
      }
    }
    figure {
      display: flex;
      align-items: center;
      justify-content: center;
    }
    &:has(> input:is(input[type="checkbox"], input[type="radio"])) {
      cursor: pointer;
      user-select: none;
    }
    &:has(> :checked) {
      outline: 2px solid currentColor;
    }
  }
  .ds-collapse-title {
    grid-column-start: 1;
    grid-row-start: 1;
    position: relative;
    width: 100%;
    padding: 1rem;
    padding-inline-end: 3rem;
    min-height: 3.75rem;
    transition: background-color 0.2s ease-out;
  }
  .ds-stats {
    position: relative;
    display: inline-grid;
    grid-auto-flow: column;
    overflow-x: auto;
    border-radius: var(--radius-box);
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .ds-tooltip-bottom {
     > .ds-tooltip-content, &[data-tip]:before {
      transform: translateX(-50%) translateY(var(--ds-tt-pos, -0.25rem));
      inset: var(--ds-tt-off) auto auto 50%;
    }
    &:after {
      transform: translateX(-50%) translateY(var(--ds-tt-pos, -0.25rem)) rotate(180deg);
      inset: var(--ds-tt-tail) auto auto 50%;
    }
  }
  .ds-tooltip-left {
     > .ds-tooltip-content, &[data-tip]:before {
      transform: translateX(calc(var(--ds-tt-pos, 0.25rem) - 0.25rem)) translateY(-50%);
      inset: 50% var(--ds-tt-off) auto auto;
    }
    &:after {
      transform: translateX(var(--ds-tt-pos, 0.25rem)) translateY(-50%) rotate(-90deg);
      inset: 50% calc(var(--ds-tt-tail) + 1px) auto auto;
    }
  }
  .ds-tooltip-right {
     > .ds-tooltip-content, &[data-tip]:before {
      transform: translateX(calc(var(--ds-tt-pos, -0.25rem) + 0.25rem)) translateY(-50%);
      inset: 50% auto auto var(--ds-tt-off);
    }
    &:after {
      transform: translateX(var(--ds-tt-pos, -0.25rem)) translateY(-50%) rotate(90deg);
      inset: 50% auto auto calc(var(--ds-tt-tail) + 1px);
    }
  }
  .ds-dropdown-right {
    --ds-anchor-h: right;
    --ds-anchor-v: span-bottom;
    .ds-dropdown-content {
      inset-inline-start: 100%;
      top: calc(0.25rem * 0);
      bottom: auto;
      transform-origin: left;
    }
  }
  .ds-chat-end {
    place-items: end;
    grid-template-columns: 1fr auto;
    .ds-chat-header {
      grid-column-start: 1;
    }
    .ds-chat-footer {
      grid-column-start: 1;
    }
    .ds-chat-image {
      grid-column-start: 2;
    }
    .ds-chat-bubble {
      grid-column-start: 1;
      border-end-end-radius: 0;
      &:before {
        transform: rotateY(180deg);
        inset-inline-start: 100%;
      }
      [dir="rtl"] &:before {
        transform: rotateY(0deg);
      }
    }
  }
  .ds-chat-start {
    place-items: start;
    grid-template-columns: auto 1fr;
    .ds-chat-header {
      grid-column-start: 2;
    }
    .ds-chat-footer {
      grid-column-start: 2;
    }
    .ds-chat-image {
      grid-column-start: 1;
    }
    .ds-chat-bubble {
      grid-column-start: 2;
      border-end-start-radius: 0;
      &:before {
        transform: rotateY(0deg);
        inset-inline-start: -0.75rem;
      }
      [dir="rtl"] &:before {
        transform: rotateY(180deg);
      }
    }
  }
  .ds-dropdown-left {
    --ds-anchor-h: left;
    --ds-anchor-v: span-bottom;
    .ds-dropdown-content {
      inset-inline-end: 100%;
      top: calc(0.25rem * 0);
      bottom: auto;
      transform-origin: right;
    }
  }
  .ds-dropdown-end {
    --ds-anchor-h: span-left;
    :where(.ds-dropdown-content) {
      inset-inline-end: calc(0.25rem * 0);
      translate: 0 0;
    }
    &.ds-dropdown-left {
      --ds-anchor-h: left;
      --ds-anchor-v: span-top;
      .ds-dropdown-content {
        top: auto;
        bottom: calc(0.25rem * 0);
      }
    }
    &.ds-dropdown-right {
      --ds-anchor-h: right;
      --ds-anchor-v: span-top;
      .ds-dropdown-content {
        top: auto;
        bottom: calc(0.25rem * 0);
      }
    }
  }
  .ds-dropdown-bottom {
    --ds-anchor-v: bottom;
    .ds-dropdown-content {
      top: 100%;
      bottom: auto;
      transform-origin: top;
    }
  }
  .isolate {
    isolation: isolate;
  }
  .ds-tab-content {
    order: var(--ds-tabcontent-order);
    display: none;
    border-color: transparent;
    --ds-tabcontent-radius-ss: 0;
    --ds-tabcontent-radius-se: 0;
    --ds-tabcontent-radius-es: 0;
    --ds-tabcontent-radius-ee: 0;
    --ds-tabcontent-order: 1;
    width: 100%;
    margin: var(--ds-tabcontent-margin);
    border-width: var(--border);
    border-start-start-radius: var(--ds-tabcontent-radius-ss);
    border-start-end-radius: var(--ds-tabcontent-radius-se);
    border-end-start-radius: var(--ds-tabcontent-radius-es);
    border-end-end-radius: var(--ds-tabcontent-radius-ee);
  }
  .ds-modal-box {
    grid-column-start: 1;
    grid-row-start: 1;
    max-height: 100vh;
    width: calc(11/12 * 100%);
    max-width: 32rem;
    background-color: var(--color-base-100);
    padding: calc(0.25rem * 6);
    transition: translate 0.3s ease-out, scale 0.3s ease-out, opacity 0.2s ease-out 0.05s, box-shadow 0.3s ease-out;
    border-top-left-radius: var(--ds-modal-tl, var(--radius-box));
    border-top-right-radius: var(--ds-modal-tr, var(--radius-box));
    border-bottom-left-radius: var(--ds-modal-bl, var(--radius-box));
    border-bottom-right-radius: var(--ds-modal-br, var(--radius-box));
    scale: 95%;
    opacity: 0;
    box-shadow: oklch(0% 0 0/ 0.25) 0px 25px 50px -12px;
    overflow-y: auto;
    overscroll-behavior: contain;
  }
  .ds-stat-value {
    grid-column-start: 1;
    white-space: nowrap;
    font-size: 2rem;
    font-weight: 800;
  }
  .ds-stat-desc {
    grid-column-start: 1;
    white-space: nowrap;
    color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
    font-size: 0.75rem;
  }
  .ds-stat-title {
    grid-column-start: 1;
    white-space: nowrap;
    color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
    font-size: 0.75rem;
  }
  .ds-stat-actions {
    grid-column-start: 1;
    white-space: nowrap;
  }
  .ds-chat-image {
    grid-row: span 2 / span 2;
    align-self: flex-end;
  }
  .ds-chat-footer {
    grid-row-start: 3;
    display: flex;
    gap: calc(0.25rem * 1);
    font-size: 0.6875rem;
  }
  .ds-chat-header {
    grid-row-start: 1;
    display: flex;
    gap: calc(0.25rem * 1);
    font-size: 0.6875rem;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .ds-divider {
    display: flex;
    height: calc(0.25rem * 4);
    flex-direction: row;
    align-items: center;
    align-self: stretch;
    white-space: nowrap;
    margin: var(--ds-divider-m, 1rem 0);
    &:before, &:after {
      content: "";
      height: calc(0.25rem * 0.5);
      width: 100%;
      flex-grow: 1;
      background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
    @media print {
      &:before, &:after {
        border: 0.5px solid;
      }
    }
    &:not(:empty) {
      gap: calc(0.25rem * 4);
    }
  }
  .m-8 {
    margin: calc(var(--spacing) * 8);
  }
  .ds-filter {
    display: flex;
    flex-wrap: wrap;
    input[type="radio"] {
      width: auto;
    }
    input {
      overflow: hidden;
      opacity: 100%;
      scale: 1;
      transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;
      &:not(:last-child) {
        margin-inline-end: calc(0.25rem * 1);
      }
      &.ds-filter-reset {
        aspect-ratio: 1 / 1;
        &::after {
          content: "×";
        }
      }
    }
    &:not(:has(input:checked:not(.ds-filter-reset))) {
      .ds-filter-reset, input[type="reset"] {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
    &:has(input:checked:not(.ds-filter-reset)) {
      input:not(:checked, .ds-filter-reset, input[type="reset"]) {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
  }
  .mx-\[3px\] {
    margin-inline: 3px;
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .mb-32 {
    margin-bottom: calc(var(--spacing) * 32);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ds-badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 2);
    border-radius: var(--radius-selector);
    vertical-align: middle;
    color: var(--color-base-content);
    border: var(--border) solid var(--ds-badge-color, var(--color-base-200));
    font-size: 0.875rem;
    width: fit-content;
    padding-inline: calc(0.25rem * 3 - var(--border));
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--ds-fx-noise);
    background-color: var(--ds-badge-color, var(--color-base-100));
    --ds-size: calc(var(--size-selector, 0.25rem) * 6);
    height: var(--ds-size);
    &.ds-badge-outline {
      color: var(--ds-badge-color, var(--color-base-content));
      border-color: currentColor;
      background-color: transparent;
      background-image: none;
      box-shadow: none;
    }
    &.ds-badge-dash {
      color: var(--ds-badge-color, var(--color-base-content));
      background-color: transparent;
      border-style: dashed;
      background-image: none;
      box-shadow: none;
    }
    &.ds-badge-soft {
      color: var(--ds-badge-color, var(--color-base-content));
      background-color: color-mix( in oklab, var(--ds-badge-color, var(--color-base-content)) 8%, var(--color-base-100) );
      border-color: color-mix( in oklab, var(--ds-badge-color, var(--color-base-content)) 10%, var(--color-base-100) );
      background-image: none;
      box-shadow: none;
    }
  }
  .ds-tabs {
    display: flex;
    flex-wrap: wrap;
    --ds-tabs-height: auto;
    --ds-tabs-direction: row;
    height: var(--ds-tabs-height);
    flex-direction: var(--ds-tabs-direction);
  }
  .ds-navbar {
    display: flex;
    width: 100%;
    align-items: center;
    padding: 0.5rem;
    min-height: 4rem;
  }
  .ds-stat {
    display: inline-grid;
    width: 100%;
    column-gap: calc(0.25rem * 4);
    padding-inline: calc(0.25rem * 6);
    padding-block: calc(0.25rem * 4);
    grid-template-columns: repeat(1, 1fr);
    &:not(:last-child) {
      border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
      border-block-end: none;
    }
  }
  .ds-navbar-end {
    display: inline-flex;
    align-items: center;
    width: 50%;
    justify-content: flex-end;
  }
  .ds-navbar-start {
    display: inline-flex;
    align-items: center;
    width: 50%;
    justify-content: flex-start;
  }
  .ds-card-body {
    display: flex;
    flex: auto;
    flex-direction: column;
    gap: calc(0.25rem * 2);
    padding: var(--ds-card-p, 1.5rem);
    font-size: var(--ds-card-fs, 0.875rem);
    :where(p) {
      flex-grow: 1;
    }
  }
  .ds-navbar-center {
    display: inline-flex;
    align-items: center;
    flex-shrink: 0;
  }
  .ds-card-actions {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    gap: calc(0.25rem * 2);
  }
  .ds-card-title {
    display: flex;
    align-items: center;
    gap: calc(0.25rem * 2);
    font-size: var(--ds-cardtitle-fs, 1.125rem);
    font-weight: 600;
  }
  .ds-chat {
    display: grid;
    column-gap: calc(0.25rem * 3);
    padding-block: calc(0.25rem * 1);
  }
  .ds-prose {
    :root & {
      --tw-prose-body: color-mix(in oklab, var(--color-base-content) 80%, #0000);
      --tw-prose-headings: var(--color-base-content);
      --tw-prose-lead: var(--color-base-content);
      --tw-prose-links: var(--color-base-content);
      --tw-prose-bold: var(--color-base-content);
      --tw-prose-counters: var(--color-base-content);
      --tw-prose-bullets: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      --tw-prose-hr: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      --tw-prose-quotes: var(--color-base-content);
      --tw-prose-quote-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      --tw-prose-captions: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      --tw-prose-code: var(--color-base-content);
      --tw-prose-pre-code: var(--color-neutral-content);
      --tw-prose-pre-bg: var(--color-neutral);
      --tw-prose-th-borders: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      --tw-prose-td-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      --tw-prose-kbd: color-mix(in oklab, var(--color-base-content) 80%, #0000);
      :where(code):not(pre > code) {
        background-color: var(--color-base-200);
        border-radius: var(--radius-selector);
        border: var(--border) solid var(--color-base-300);
        padding-inline: 0.5em;
        font-weight: inherit;
        &:before,
    &:after {
          display: none;
        }
      }
    }
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .table {
    display: table;
  }
  .field-sizing-content {
    field-sizing: content;
  }
  .h-auto {
    height: auto;
  }
  .h-screen {
    height: 100vh;
  }
  .min-h-\[160px\] {
    min-height: 160px;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .ds-btn-block {
    width: 100%;
  }
  .w-full {
    width: 100%;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-3xl {
    max-width: var(--container-3xl);
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .max-w-xl {
    max-width: var(--container-xl);
  }
  .flex-1 {
    flex: 1;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .ds-link {
    cursor: pointer;
    text-decoration-line: underline;
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:focus-visible {
      outline: 2px solid currentColor;
      outline-offset: 2px;
    }
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .ds-stats-vertical {
    grid-auto-flow: row;
    overflow-y: auto;
    .ds-stat:not(:last-child) {
      border-inline-end: none;
      border-block-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
    }
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .place-items-center {
    place-items: center;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-stretch {
    justify-content: stretch;
  }
  .justify-items-center {
    justify-items: center;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-4xl {
    border-radius: var(--radius-4xl);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-3 {
    border-style: var(--tw-border-style);
    border-width: 3px;
  }
  .border-b-3 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 3px;
  }
  .border-base-300 {
    border-color: var(--color-base-300);
  }
  .border-error {
    border-color: var(--color-error);
  }
  .border-primary {
    border-color: var(--color-primary);
  }
  .border-secondary {
    border-color: var(--color-secondary);
  }
  .border-success {
    border-color: var(--color-success);
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-warning {
    border-color: var(--color-warning);
  }
  .ds-chat-bubble-primary {
    background-color: var(--color-primary);
    color: var(--color-primary-content);
  }
  .ds-chat-bubble-warning {
    background-color: var(--color-warning);
    color: var(--color-warning-content);
  }
  .bg-base-100 {
    background-color: var(--color-base-100);
  }
  .bg-base-200 {
    background-color: var(--color-base-200);
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-primary\/5 {
    background-color: color-mix(in oklab, var(--color-primary) 5%, transparent);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-warning {
    background-color: var(--color-warning);
  }
  .bg-warning\/5 {
    background-color: color-mix(in oklab, var(--color-warning) 5%, transparent);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pb-0 {
    padding-bottom: calc(var(--spacing) * 0);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .font-sans {
    font-family: var(--font-sans);
  }
  .font-serif {
    font-family: var(--font-serif);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .leading-\[0\.85\] {
    --tw-leading: 0.85;
    line-height: 0.85;
  }
  .font-black {
    --tw-font-weight: var(--font-weight-black);
    font-weight: var(--font-weight-black);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .ds-badge-error {
    --ds-badge-color: var(--color-error);
    color: var(--color-error-content);
  }
  .ds-badge-info {
    --ds-badge-color: var(--color-info);
    color: var(--color-info-content);
  }
  .ds-badge-primary {
    --ds-badge-color: var(--color-primary);
    color: var(--color-primary-content);
  }
  .ds-badge-secondary {
    --ds-badge-color: var(--color-secondary);
    color: var(--color-secondary-content);
  }
  .ds-badge-success {
    --ds-badge-color: var(--color-success);
    color: var(--color-success-content);
  }
  .ds-badge-warning {
    --ds-badge-color: var(--color-warning);
    color: var(--color-warning-content);
  }
  .ds-link-primary {
    color: var(--color-primary);
    @media (hover: hover) {
      &:hover {
        color: color-mix(in oklab, var(--color-primary) 80%, #000);
      }
    }
  }
  .ds-tooltip-secondary {
    --ds-tt-bg: var(--color-secondary);
     > .ds-tooltip-content, &[data-tip]:before {
      color: var(--color-secondary-content);
    }
  }
  .text-base-content {
    color: var(--color-base-content);
  }
  .text-base-content\/60 {
    color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
  }
  .text-base-content\/70 {
    color: color-mix(in oklab, var(--color-base-content) 70%, transparent);
  }
  .text-error {
    color: var(--color-error);
  }
  .text-info {
    color: var(--color-info);
  }
  .text-inherit {
    color: inherit;
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-primary-content {
    color: var(--color-primary-content);
  }
  .text-success {
    color: var(--color-success);
  }
  .text-warning {
    color: var(--color-warning);
  }
  .lowercase {
    text-transform: lowercase;
  }
  .italic {
    font-style: italic;
  }
  .ds-link-hover {
    text-decoration-line: none;
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .underline {
    text-decoration-line: underline;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .ds-btn-soft {
    &:not(.ds-btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .ds-btn-disabled) {
      --ds-btn-shadow: "";
      --ds-btn-fg: var(--ds-btn-color, var(--color-base-content));
      --ds-btn-bg: color-mix(
      in oklab,
      var(--ds-btn-color, var(--color-base-content)) 8%,
      var(--color-base-100)
    );
      --ds-btn-border: color-mix(
      in oklab,
      var(--ds-btn-color, var(--color-base-content)) 10%,
      var(--color-base-100)
    );
      --ds-btn-noise: none;
    }
  }
  .ds-indicator-middle {
    --ds-inidicator-t: 50%;
    --ds-inidicator-b: 50%;
    --ds-indicator-y: -50%;
  }
  .ds-btn-error {
    --ds-btn-color: var(--color-error);
    --ds-btn-fg: var(--color-error-content);
  }
  .ds-btn-neutral {
    --ds-btn-color: var(--color-neutral);
    --ds-btn-fg: var(--color-neutral-content);
  }
  .ds-btn-primary {
    --ds-btn-color: var(--color-primary);
    --ds-btn-fg: var(--color-primary-content);
  }
  .ds-btn-secondary {
    --ds-btn-color: var(--color-secondary);
    --ds-btn-fg: var(--color-secondary-content);
  }
  .ds-btn-warning {
    --ds-btn-color: var(--color-warning);
    --ds-btn-fg: var(--color-warning-content);
  }
  .target\:border-primary {
    &:target {
      border-color: var(--color-primary);
    }
  }
  .hover\:-translate-y-1 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:border-base-300 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-base-300);
      }
    }
  }
  .hover\:bg-base-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-base-200);
      }
    }
  }
  .hover\:bg-primary\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
      }
    }
  }
  .hover\:bg-primary\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--color-primary) 90%, transparent);
      }
    }
  }
  .hover\:bg-warning\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--color-warning) 10%, transparent);
      }
    }
  }
  .hover\:text-primary {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
  }
  .md\:ds-stats-horizontal {
    @media (width >= 48rem) {
      grid-auto-flow: column;
      overflow-x: auto;
      .ds-stat:not(:last-child) {
        border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
        border-block-end: none;
      }
    }
  }
  .md\:grid-cols-4 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .md\:gap-8 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .md\:text-3xl {
    @media (width >= 48rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
}
* {
  scrollbar-gutter: stable both-edges;
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --color-base-100: oklch(25.33% 0.016 252.42);
      --color-base-200: oklch(23.26% 0.014 253.1);
      --color-base-300: oklch(21.15% 0.012 254.09);
      --color-base-content: oklch(97.807% 0.029 256.847);
      --color-primary: oklch(58% 0.233 277.117);
      --color-primary-content: oklch(96% 0.018 272.314);
      --color-secondary: oklch(65% 0.241 354.308);
      --color-secondary-content: oklch(94% 0.028 342.258);
      --color-accent: oklch(77% 0.152 181.912);
      --color-accent-content: oklch(38% 0.063 188.416);
      --color-neutral: oklch(14% 0.005 285.823);
      --color-neutral-content: oklch(92% 0.004 286.32);
      --color-info: oklch(74% 0.16 232.661);
      --color-info-content: oklch(29% 0.066 243.157);
      --color-success: oklch(76% 0.177 163.223);
      --color-success-content: oklch(37% 0.077 168.94);
      --color-warning: oklch(82% 0.189 84.429);
      --color-warning-content: oklch(41% 0.112 45.904);
      --color-error: oklch(71% 0.194 13.428);
      --color-error-content: oklch(27% 0.105 12.094);
      --radius-selector: 0.5rem;
      --radius-field: 0.25rem;
      --radius-box: 0.5rem;
      --size-selector: 0.25rem;
      --size-field: 0.25rem;
      --border: 1px;
      --depth: 1;
      --noise: 0;
    }
  }
}
@layer base {
  :root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
    color-scheme: dark;
    --color-base-100: oklch(25.33% 0.016 252.42);
    --color-base-200: oklch(23.26% 0.014 253.1);
    --color-base-300: oklch(21.15% 0.012 254.09);
    --color-base-content: oklch(97.807% 0.029 256.847);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(96% 0.018 272.314);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
}
@layer base {
  :root {
    scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
  }
}
@layer base {
  :root:has( .ds-modal-open, .ds-modal[open], .ds-modal:target, .ds-modal-toggle:checked, .ds-drawer:not([class*="drawer-open"]) > .ds-drawer-toggle:checked ) {
    overflow: hidden;
  }
}
@layer base {
  :root,
[data-theme] {
    background-color: var(--ds-root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
}
@layer base {
  :root {
    --ds-fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }
  .ds-chat {
    --ds-mask-chat: url("data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e");
  }
}
@layer base {
  :where(
  :root:has(
      .ds-modal-open,
      .ds-modal[open],
      .ds-modal:target,
      .ds-modal-toggle:checked,
      .ds-drawer:not(.ds-drawer-open) > .ds-drawer-toggle:checked
    )
) {
    scrollbar-gutter: stable;
    background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
    --ds-root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
  }
}
@keyframes skeleton {
  0% {
    background-position: 150%;
  }
  100% {
    background-position: -50%;
  }
}
@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}
@keyframes radio {
  0% {
    padding: 5px;
  }
  50% {
    padding: 3px;
  }
}
@keyframes dropdown {
  0% {
    opacity: 0;
  }
}
@keyframes rating {
  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}
@keyframes toast {
  0% {
    scale: 0.9;
    opacity: 0;
  }
  100% {
    scale: 1;
    opacity: 1;
  }
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=corporate]:checked),[data-theme="corporate"] {
    color-scheme: normal;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(93% 0 0);
    --color-base-300: oklch(86% 0 0);
    --color-base-content: oklch(22.389% 0.031 278.072);
    --color-primary: #4169E1;
    --color-primary-content: oklch(100% 0 0);
    --color-secondary: oklch(55% 0.046 257.417);
    --color-secondary-content: oklch(100% 0 0);
    --color-accent: #7366bd;
    --color-accent-content: oklch(100% 0 0);
    --color-neutral: oklch(0% 0 0);
    --color-neutral-content: oklch(100% 0 0);
    --color-info: oklch(60% 0.126 221.723);
    --color-info-content: oklch(100% 0 0);
    --color-success: oklch(62% 0.194 149.214);
    --color-success-content: oklch(100% 0 0);
    --color-warning: #ff8800;
    --color-warning-content: oklch(0% 0 0);
    --color-error: oklch(70% 0.191 22.216);
    --color-error-content: oklch(0% 0 0);
    --radius-selector: 0.25rem;
    --radius-field: 0.25rem;
    --radius-box: 0.25rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: normal;
      --color-base-100: oklch(24.353% 0 0);
      --color-base-200: oklch(22.648% 0 0);
      --color-base-300: oklch(20.944% 0 0);
      --color-base-content: oklch(84.87% 0 0);
      --color-primary: #4169E1;
      --color-primary-content: oklch(88.34% 0.019 251.473);
      --color-secondary: oklch(64.092% 0.027 229.389);
      --color-secondary-content: oklch(12.818% 0.005 229.389);
      --color-accent: #7366bd;
      --color-accent-content: oklch(13.454% 0.033 35.791);
      --color-neutral: oklch(27.441% 0.013 253.041);
      --color-neutral-content: oklch(85.488% 0.002 253.041);
      --color-info: oklch(62.616% 0.143 240.033);
      --color-info-content: oklch(12.523% 0.028 240.033);
      --color-success: oklch(70.226% 0.094 156.596);
      --color-success-content: oklch(14.045% 0.018 156.596);
      --color-warning: #ff7700;
      --color-warning-content: oklch(96% 0.059 95.617);
      --color-error: oklch(51.61% 0.146 29.674);
      --color-error-content: oklch(90.322% 0.029 29.674);
      --radius-selector: 0rem;
      --radius-field: 0.25rem;
      --radius-box: 0.25rem;
      --size-selector: 0.25rem;
      --size-field: 0.25rem;
      --border: 1px;
      --depth: 0;
      --noise: 1;
    }
  }
}
@layer base {
  :root:has(input.theme-controller[value=business]:checked),[data-theme="business"] {
    color-scheme: normal;
    --color-base-100: oklch(24.353% 0 0);
    --color-base-200: oklch(22.648% 0 0);
    --color-base-300: oklch(20.944% 0 0);
    --color-base-content: oklch(84.87% 0 0);
    --color-primary: #4169E1;
    --color-primary-content: oklch(88.34% 0.019 251.473);
    --color-secondary: oklch(64.092% 0.027 229.389);
    --color-secondary-content: oklch(12.818% 0.005 229.389);
    --color-accent: #7366bd;
    --color-accent-content: oklch(13.454% 0.033 35.791);
    --color-neutral: oklch(27.441% 0.013 253.041);
    --color-neutral-content: oklch(85.488% 0.002 253.041);
    --color-info: oklch(62.616% 0.143 240.033);
    --color-info-content: oklch(12.523% 0.028 240.033);
    --color-success: oklch(70.226% 0.094 156.596);
    --color-success-content: oklch(14.045% 0.018 156.596);
    --color-warning: #ff7700;
    --color-warning-content: oklch(96% 0.059 95.617);
    --color-error: oklch(51.61% 0.146 29.674);
    --color-error-content: oklch(90.322% 0.029 29.674);
    --radius-selector: 0rem;
    --radius-field: 0.25rem;
    --radius-box: 0.25rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 1;
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
